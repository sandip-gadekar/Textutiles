{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggle","role","htmlFor","defaultProps","TextForm","newtext","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","btnval","setbuttonvalue","convertToUpper","toUpperCase","convertToLower","toLowerCase","style","color","rows","value","onChange","event","target","backgroundColor","disabled","length","copyText","document","getElementById","setSelectionRange","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","About","class","href","App","setMode","body","Components_Navbar","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.860b6842.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to='/'>{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n        </div>\r\n      </nav> \r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n title: PropTypes.string.isRequired,\r\n about:PropTypes.string\r\n\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'About'\r\n};\r\n\r\nexport default Navbar\r\n\r\n","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n    let newtext;\r\n    const [text, setText] = useState(\"\");\r\n    const [btnval, setbuttonvalue] = useState('Uppercase');\r\n    const setbtnvalue = () => {\r\n        if (btnval === 'Uppercase') {\r\n            convertToUpper();\r\n            setbuttonvalue(\"Lowercase\");\r\n\r\n\r\n        }\r\n        else {\r\n            convertToLower();\r\n            setbuttonvalue('Uppercase');\r\n        }\r\n    }\r\n\r\n    const convertToUpper = () => {\r\n        newtext = text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const convertToLower = () => {\r\n        newtext = text.toLowerCase();\r\n        setText(newtext);\r\n    }\r\n    const clearText = () => {\r\n        newtext = '';\r\n        setText(newtext);\r\n    }\r\n    const copyText = () => {\r\n        var copyText = document.getElementById(\"exampleFormControlTextarea1\");\r\n\r\n        /* Select the text field */\r\n\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices *\r\n      \r\n         /* Copy the text inside the text field */\r\n        navigator.clipboard.writeText(copyText.value);\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n    const extraSpacesHandle = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n    }\r\n    const getText = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label my-3\">Enter text Here below </label>\r\n                    <textarea className=\"form-control my-2\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={getText} style={{ backgroundColor: props.mode === 'dark' ? 'gray' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}></textarea>\r\n                    <button type=\"button\" disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={setbtnvalue}  >{btnval}</button>\r\n                    <button type=\"button\" disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={clearText}>Clear Text</button>\r\n                    <button type=\"button\" disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={copyText}>Copy Text</button>\r\n                    <button type=\"button\" disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={extraSpacesHandle}>Remove Extra spaces</button>\r\n                    <button type=\"button\" className=\"custom-btn btn-3\"><span>Read More</span></button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Text Summary</h1>\r\n                <p>number of words {text.split(/\\s+/).length - 1} and number of character is {text.length}</p>\r\n                <p>{0.0008 * text.split(\" \").length} minutes required to read</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n        <div className='container'>\r\n                <div class=\"card text-center\">\r\n                    <div class=\"card-header\">\r\n                        Featured\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">Special title treatment</h5>\r\n                        <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    <div class=\"card-footer text-muted\">\r\n                        2 days ago\r\n                    </div>\r\n                </div>\r\n      \r\n        </div>\r\n    </>\r\n    \r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport About from './Components/About';\nimport React,{ useState } from \"react\";\n\nimport { Routes, Route, Link } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggle=()=>{\n    if(mode==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      document.title=\"Dark Mode-Light\"\n      \n      \n    }\n    else{\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      document.title=\"Dark Mode-blue\"\n      \n    }\n  }\n  \n  return (\n    <>\n      <Navbar title=\"TextUtiles\" about=\"About\" mode={mode} toggle={toggle}/>\n      <Routes>\n        <Route path=\"About\" element={<About/>} />\n          <Route path=\"/\" element={<TextForm mode={mode} toggle={toggle}/>} />\n          <Route path=\"About\" element={<About/>} />\n      </Routes>\n      \n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}